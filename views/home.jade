extends ./layout.jade

block content
	nav.navbar.navbar-default
		.collapse.navbar-collapse#tabs
			ul.nav.navbar-nav
				+tab("search-chimneys")(class=(tab=='search'?'active':''))
					| Search for Chimneys
				- if(swap){
				+tab("my-swap")(class=(tab=='swap'?'active':''))
					| My Chimney Swaps
				- }
				+tab("add-chimney")(class=(tab=='add'?'active':''))
					| Add Chimney
	.tab-content
		#search-chimneys(role="tabpanel", class='tab-pane '+(tab=='search'?'active':''))
			.container: div.row
				for chimney in chimneys
					+chimneyThumbnail(chimney)
						button.btn.btn-primary.swap-button(
							type="button"
							data-chimney=chimney.resource()
						) Swap!
			script.
				$('.swap-button').click(function(){
					var chimney = JSON.parse($(this).attr('data-chimney'));
					$('#swap-chimney-name').text(chimney.name);
					$('#swap-chimney-img').attr('src',chimney.image)
					$('#swap-modal').modal({backdrop:true});
					$('.swap-input').val(chimney.id);
				});
		- if(swap) {
		#my-swap(role="tabpanel", class='tab-pane '+(tab=='swap'?'active':''))
			.container: div.row
				.col-sm-12
					#map

			script(src="/pathfinder.js")
			script(src="https://maps.googleapis.com/maps/api/js")
			script(type='text/javascript').

				var mine = !{swap.mine.resource()};

				var theirs = !{swap.theirs.resource()};

				var app = new Pathfinder(
					'ws://api.thepathfinder.xyz:9000/socket',
					'9c4166bb-9535-49e1-8844-1904a0b1f45b',
					'password'
				);

				function toLatLng(thing){
					return new google.maps.LatLng(
						thing.latitude,
						thing.longitude
					);
				}
				
				var directionsService = new google.maps.DirectionsService();

				var map = new google.maps.Map(
					document.getElementById('map'),
					{
						center: theirs.position,
						zoom: 10
					}
				);

				var bounds = new google.maps.LatLngBounds();
				console.log(mine);
				console.log(theirs);
				bounds.extend(new google.maps.LatLng(mine.position));
				bounds.extend(new google.maps.LatLng(theirs.position));
				map.fitBounds(bounds);

				function drawRoute(chim){
					console.log('draw route');
					var comMark = new google.maps.Marker({
						position: chim.position,
						map: map,
						icon:'icon/Chimney.png'
					});

					var vMark = new google.maps.Marker({
						icon:'icon/Transport.png'
					});

					return function(obj, routed){
						console.log('route updated');
						directionsDisplay = new google.maps.DirectionsRenderer();
						directionsDisplay.setMap(map);
						console.log(routed);
						var route = routed.route;
						var waypoints = route.actions.map(toLatLng);
						console.log(routed.value);

						vMark.setMap(map);
						vMark.setPosition(toLatLng(route.vehicle));
						var dirReq = {
							origin:waypoints[0],
							destination:waypoints[waypoints.length-1],
							travelMode:google.maps.TravelMode.DRIVING,
							waypoints:waypoints.slice(1,waypoints.length-1).map(
								function(wp){return {location: wp}}
							)
						};
						console.log(dirReq);
						directionsService.route(dirReq, function(result, status){
							if(status != google.maps.DirectionsStatus.OK)
								console.warn("error from google maps routing");
							else
								directionsDisplay.setDirections(result);
						});
						
					};
				}
				app.getDefaultClusterId(function(id){
					console.log('DEFAULT CLUSTER');
					app.createCommodity(
						mine.position.lat,
						mine.position.lng,
						theirs.position.lat,
						theirs.position.lng,
						1,
						'Waiting',
						id,
						function(myChimneyComm){
							console.log("COMM CALLBACK CALLED");
							myChimneyComm.routeSubscribe(
								function(){},
								drawRoute(mine)
							)
						}
					);

					app.createCommodity(
						theirs.position.lat,
						theirs.position.lng,
						mine.position.lat,
						mine.position.lng,
						1,
						'Waiting',
						id,
						function(theirChimneyComm){
							theirChimneyComm.routeSubscribe(
								function(){},
								drawRoute(theirs)
							)
						}
					);
				});
		- }

		#add-chimney(role='tabpanel', class='tab-pane'+(tab=='add'?'active':''))
			.container: div.row: div.col-sm-12
				+chimneyForm('search')

	#swap-modal.modal.fade(role="dialog")
		.modal-dialog
			.modal-content
				.modal-header
					button.close(type="button", data-dismiss="modal") &times;
					h2 Select a Chimney to Swap!

				.modal-body: div.container.col-sm-12: div.row
					.col-sm-6
						#swap-chimney-info
							h4#swap-chimney-name
							.img-container
								img#swap-chimney-img.img-responsive
					.col-sm-6
						h4 Your Chimney
						- if(myChimneys && myChimneys.length > 0){
							ul.nav.nav-tabs(role="tablist")
								+tab("select-chimney")(
									class="active"
									role="presentation"
								) Choose A Chimney
								+tab("add-chimney")(
									role="presentation"
								) Add a Chimney

							.tab-content
								#select-chimney.tab-pane.active(role="tabpanel")
									for chimney in myChimneys
										+chimneyThumbnail(chimney)
											button.swap.btn.btn-primary(data-chimney=chimny.resource()) Swap
								#add-chimney.tab-pane
									+chimneyForm('swap')
						- } else {
							+chimneyForm('swap')
						- }

				.modal-footer
					button.btn.btn-default(type="button", data-dismiss="modal") Close

